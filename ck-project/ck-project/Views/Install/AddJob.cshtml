@model ck_project.tasks_installation
@{
    Layout = null;
}
@using (Html.BeginForm("handler", "Install", FormMethod.Post, new { @style = "border-color:#E74C3C" }))
{
    @Html.AntiForgeryToken()

    <div class="form-inline">
        <h4>Create new task for this catolog</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.task_number, "Task name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.mode == 0)
                {
                    @Html.DropDownList("task_number", (List<SelectListItem>)ViewBag.taskname, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.task_number, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.Editor("task_name", new { htmlAttributes = new { @class = "form-control" } })
                }

            </div>
        </div>
        <div class="form-group">
            @Html.HiddenFor(model => model.installation_number, new { @Value = ViewBag.insnum })
            @Html.Hidden("mode", new { @Value = ViewBag.mode })
            @*@Html.LabelFor(model => model.installation_number, "**System field ignore this***", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.installation_number, new { disabled="disabled", @readonly = "readonly", @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.installation_number, "", new { @class = "text-danger" })
                </div>*@
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.hours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hours, "Work Hours", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hours, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.m_cost, "Material Cost", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.m_cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.m_cost, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.labor_cost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.labor_cost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.labor_cost, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
